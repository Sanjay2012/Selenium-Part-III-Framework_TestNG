Synchronization:
==============================
get()-->going to open the appli  main page/ landing page (execution stop once page completly load)

findElemnt()--->identify the webelemnt in webpage and perform action ex. click, sendkeys
- element is not displayed on page and selenium is going to perform action on it
- NoSuchElementExecptions/ ElementNotInteractableException

==================================
Defination:
Mactching of selenium TS running speed with app speed 

a) Thread.sleep()
b) Implicit wait
c) Explicit wait

# Thread.sleep(in milisecond)
-Drawback: selenium speed is reduces
- even webelement is loaded erlier than what time we mentined in Thread.sleep(), still it will take 
that much time

package synchronization;

import java.time.Duration;
import java.util.concurrent.TimeUnit;
import java.util.function.Function;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;

public class Thread_Sleep {

	public static void main(String[] args) throws InterruptedException {
		System.setProperty("webdriver.chrome.driver", "D:\\Softwares\\chromedriver.exe");
		WebDriver driver=new ChromeDriver();
		
		driver.get("http://omayo.blogspot.com/");
		driver.manage().window().maximize();
		//driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);      // implicit wait
		
		driver.findElement(By.xpath("//*[@class=\"dropbtn\"]")).click();
		
		Thread.sleep(10000);
		
		driver.findElement(By.linkText("Flipkart")).click();
		
		

		driver.quit();
		
		

	}

}


-------------------------------------

# implicit wait()
- applicable for all the elemnts present in script
- kind of global wait
- this wait work fo all web element equally
- dynamic wait unlike thread.sleep
- Syntax: driver.manage().TIMEOUT().implicitWait(time, timeUnit)
-webelement is loaded erlier than what time we mentined in implicit wait then it will skip 
the rest of the time
- dynamic--> if required then only wait otherwise if element is present it should not wait for specified time



package synchronization;

import java.time.Duration;
import java.util.concurrent.TimeUnit;
import java.util.function.Function;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;

public class Thread_Sleep {

	public static void main(String[] args) throws InterruptedException {
		System.setProperty("webdriver.chrome.driver", "D:\\Softwares\\chromedriver.exe");
		WebDriver driver=new ChromeDriver();
		
		driver.get("http://omayo.blogspot.com/");
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);      // implicit wait
		
		driver.findElement(By.xpath("//*[@class=\"dropbtn\"]")).click();
		
		//Thread.sleep(10000);
		
		driver.findElement(By.linkText("Flipkart")).click();
		
		

		driver.quit();
		
		

	}

}

====================================
# Explicit wait()
- instead of waiting or all elements in application , 
- we  will use explicit wait only for specific element
- Synatx:

WebDriverWait wait=new WebDriverWait(driver, 10);
WebElement ele = wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Flipkart")));
ele.click();
-------------------------------------------
package synchronization;

import java.time.Duration;
import java.util.concurrent.TimeUnit;
import java.util.function.Function;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;

public class Thread_Sleep {

	public static void main(String[] args) throws InterruptedException {
		System.setProperty("webdriver.chrome.driver", "D:\\Softwares\\chromedriver.exe");
		WebDriver driver=new ChromeDriver();
		
		driver.get("http://omayo.blogspot.com/");
		driver.manage().window().maximize();
		driver.findElement(By.xpath("//*[@class=\"dropbtn\"]")).click();
		
		WebDriverWait wait=new WebDriverWait(driver, 10);
	
		 WebElement ele = wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Flipkart")));
		
		ele.click();

		driver.quit();
		
		

	}

}



-----------

# Fluent wait
- advance version of explicit wait
- used pooling mechanism

=========================================

Selenium Framework
- is a code structure that makes code maintanance easy and efficient
- without framework user may pl;ace data and code in same location
- test data ex. UN, PWD etc
- we cannot reuse as well as these things not readable easly
- Framework-
1. increase code reusability (code --- data)---> data driven
2. higehr portability
3. reduce the cost of script maintance
4. better code readability

-------------------------------------------------
We can create three framework using selenium webdriver
1. Data driven
2. Keyword Driven
3. Hybrid

# data driven framework (DDF)
-------------------------------
- method of seperating "Test data" from "test case/ TS"
- we can easily modify specific functionality without changing code
- test data may be in excel sheet, csv, xml, text or some other database table

---------------------
# without data driven framework

System.setProperty("webdriver.chrome.driver", "D:\\Softwares\\chromedriver.exe");
		WebDriver driver=new ChromeDriver();
		
		driver.get("https://kite.zerodha.com/");
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		driver.manage().window().maximize();
		
		// enter UN
		driver.findElement(By.id("userid")).sendKeys("KW0610");
		
		// enter pwd
		
		driver.findElement(By.id("password")).sendKeys("Shiv@123");
		
		// click on login button
		
		driver.findElement(By.xpath("//*[text()='Login ']")).click();
		
		// enter pin
		
		driver.findElement(By.id("pin")).sendKeys("152022");
		
		// click on continue 
		
		driver.findElement(By.xpath("//*[text()='Continue ']")).click();
		
		String actual = driver.findElement(By.xpath("//*[text()='KW0610']")).getText();
		
		String expected="KW0610";
		
		if (actual.equals(expected)) {
			
			System.out.println("PASS");
			
		}
		
		else {
			System.out.println("FAIL");
		}
		
		driver.quit();

============================================
# with data driven
\

package framework;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.concurrent.TimeUnit;

import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class DDF {

	public static void main(String[] args) throws EncryptedDocumentException, IOException {
		
		FileInputStream file=new FileInputStream("D:\\MindMAPS\\Automation\\testdata.xlsx");
		Sheet sh = WorkbookFactory.create(file).getSheet("DDF");
		
		System.setProperty("webdriver.chrome.driver", "D:\\Softwares\\chromedriver.exe");
		WebDriver driver=new ChromeDriver();
		
		driver.get("https://kite.zerodha.com/");
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		driver.manage().window().maximize();
		
		// enter UN
		String UN = sh.getRow(1).getCell(0).getStringCellValue();
		driver.findElement(By.id("userid")).sendKeys(UN);
		
		// enter pwd
		String PWD = sh.getRow(1).getCell(1).getStringCellValue();
		driver.findElement(By.id("password")).sendKeys(PWD);
		
		// click on login button
		
		driver.findElement(By.xpath("//*[text()='Login ']")).click();
		
		// enter pin
		String PIN = sh.getRow(1).getCell(2).getStringCellValue();
		driver.findElement(By.id("pin")).sendKeys(PIN);
		
		// click on continue 
		
		driver.findElement(By.xpath("//*[text()='Continue ']")).click();
		
		String actual = driver.findElement(By.className("avatar")).getText();
		
		String expected=sh.getRow(1).getCell(3).getStringCellValue();
		
		if (actual.equals(expected)) {
			
			System.out.println("PASS");
			
		}
		
		else {
			System.out.println("FAIL");
		}
		
		driver.quit();

	}

}
===============================================================























